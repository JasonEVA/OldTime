//
//  MsgEmojiInputView.m
//  Titans
//
//  Created by Wythe Zhou on 1/21/15.
//  Copyright (c) 2015 Remon Lv. All rights reserved.
//

#import "MsgEmojiInputView.h"
#import "MsgEmojiCollectionViewCell.h"
#import "MsgEmojiBackspaceCollectionViewCell.h"
#import "QuickCreateManager.h"

#define COLLECTION_CELL_INDENTIFER  @"MsgEmojiInputCollectionViewCell"
#define COLLECTION_CELL_BACKSPACE_INDENTIFER  @"MsgEmojiInputCollectionViewCellBackspace"

#define INPUTVIEW_HEIGHT            216

// Â∫ïÈÉ®Ê†è
#define BOTTOM_BAR_HEIGHT           36

#define BOTTOM_SEND_BTN_WIDTH       64
#define BOTTOM_SEND_BTN_FONT        16
#define BOTTOM_SEND_BTN_BG_COLOR    [UIColor colorWithRed:0.23f green:0.51f blue:0.98f alpha:1.0f]

// ÂàÜÈ°µÊéßÂà∂Âô®
#define PAGECONTROL_HEIGHT          22

// Ë°®ÊÉÖÊâÄÂú®ÁöÑ CollectionView
#define COLLECTIONVIEW_HEIGHT       (INPUTVIEW_HEIGHT - BOTTOM_BAR_HEIGHT - PAGECONTROL_HEIGHT) // 158

#define COLLECTION_CELL_ROW         3

// Âçï‰∏™Ë°®ÊÉÖ Cell ÁöÑ CollectionView
#define COLLECTION_CELL_WIDTH       40
#define COLLECTION_CELL_X_NUM_4     7
#define COLLECTION_CELL_X_NUM_4_7   8
#define COLLECTION_CELL_X_NUM_5_5   9

#define PREPARE_PAGE_NUMBER         5

// ÈîÆÁõòÈ´òÂ∫¶
// 320 216
// 375 216
// 414 216
// 320 / 7 = 45
// 45 * 8 = 360
// 45 * 9 = 405
// 45 * 3 = 135

@implementation MsgEmojiInputView

- (id)initWithFrame:(CGRect)frame
{
    if (self = [super initWithFrame:frame])
    {
        self.backgroundColor = [UIColor groupTableViewBackgroundColor];
//        self.autoresizingMask = UIViewAutoresizingFlexibleHeight;
        [self initEmojiArray];
        // ‰∏ÄÂÖ±Âè™ÈúÄË¶Å‰∏â‰∏™ collectionView
        _arrCollectionViews = [NSMutableArray arrayWithCapacity:PREPARE_PAGE_NUMBER];
        for (NSUInteger i = 0; i < 5; i++)
        {
            [_arrCollectionViews addObject:[NSNull null]];
        }
        
        // ËÆ°ÁÆó Emoji ÁöÑË°®ÊÉÖÊï∞ÈáèÁ≠âÔºåËé∑ÂæóÂøÖË¶ÅÁöÑË°å„ÄÅÂàó„ÄÅÈ°µÊï∞‰ø°ÊÅØ
        [self initCountData];
        // ÂàõÂª∫ ScrollView Âπ∂ÈÖçÁΩÆÂ•Ω Delegate Ëøô‰∫õÔºåÂπ∂‰∏îÈÖçÁΩÆÂ•ΩÂàÜÈ°µ
        [self initScrollView];
        [self initBottomBar];
        
        for (NSInteger i = 0; i < (PREPARE_PAGE_NUMBER) / 2; i++)
        {
            [self loadScrollViewWithPage:i];
        }
    }
    return self;
}

- (void)initEmojiArray
{
    _emojiArray = @[@"üòÑ", @"üòä", @"üòÉ", @"‚ò∫", @"üòâ", @"üòç", @"üòò", @"üòö", @"üò≥", @"üòå", @"üòÅ", @"üòú", @"üòù", @"üòí", @"üòè", @"üòì", @"üòî", @"üòû", @"üòñ", @"üò•", @"üò∞", @"üò®", @"üò£", @"üò¢", @"üò≠", @"üòÇ", @"üò≤", @"üò±", @"üò†", @"üò°", @"üò™", @"üò∑", @"üëø", @"‚ù§", @"üíî", @"‚ú®", @"üåü", @"üí¢", @"üí§", @"üí®", @"üí¶", @"üé∂", @"üî•", @"üí©", @"üëç", @"üëé", @"üëå", @"‚úä", @"‚úå", @"üëã", @"üôè", @"üëÜ", @"üëá", @"üëâ", @"üëà", @"‚òù", @"üëè", @"üí™", @"üëÑ", @"üëÇ", @"üëÄ", @"üëÉ", @"üëª", @"üéÖ", @"üéÉ", @"üéÑ", @"üéÅ", @"‚ô†", @"‚ô•", @"‚ô£", @"‚ô¶", @"üëô", @"üéÄ", @"üíé", @"‚òï", @"üçé", @"üçâ", @"üçé", @"üê∂", @"üê∑", @"üê¶"];
    
//    _emojiArray = @[@"üòÑ", @"üòä", @"üòÉ", @"‚ò∫", @"üòâ", @"üòç", @"üòò", @"üòö", @"üò≥", @"üòå", @"üòÅ", @"üòú", @"üòù", @"üòí", @"üòè", @"üòì", @"üòî", @"üòû", @"üòñ", @"üò•", @"üò∞", @"üò®", @"üò£", @"üò¢", @"üò≠", @"üòÇ", @"üò≤", @"üò±", @"üò†", @"üò°", @"üò™", @"üò∑", @"üëø", @"üëΩ", @"üíõ", @"üíô", @"üíú", @"üíó", @"üíö", @"‚ù§", @"üíî", @"üíì", @"üíò", @"‚ú®", @"üåü", @"üí¢", @"‚ùï", @"‚ùî", @"üí§", @"üí®", @"üí¶", @"üé∂", @"üéµ", @"üî•", @"üí©", @"üëç", @"üëé", @"üëå", @"üëä", @"‚úä", @"‚úå", @"üëã", @"‚úã", @"üëê", @"üëÜ", @"üëá", @"üëâ", @"üëà", @"üôå", @"üôè", @"‚òù", @"üëè", @"üí™", @"üö∂", @"üèÉ", @"üë´", @"üíÉ", @"üëØ", @"üôÜ", @"üôÖ", @"üíÅ", @"üôá", @"üíè", @"üíë", @"üíÜ", @"üíá", @"üíÖ", @"üë¶", @"üëß", @"üë©", @"üë®", @"üë∂", @"üëµ", @"üë¥", @"üë±", @"üë≤", @"üë≥", @"üë∑", @"üëÆ", @"üëº", @"üë∏", @"üíÇ", @"üíÄ", @"üë£", @"üíã", @"üëÑ", @"üëÇ", @"üëÄ", @"üëÉ", @"üéç", @"üíù", @"üéé", @"üéí", @"üéì", @"üéè", @"üéÜ", @"üéá", @"üéê", @"üéë", @"üéÉ", @"üëª", @"üéÖ", @"üéÑ", @"üéÅ", @"üîî", @"üéâ", @"üéà", @"üíø", @"üìÄ", @"üì∑", @"üé•", @"üíª", @"üì∫", @"üì±", @"üì†", @"‚òé", @"üíΩ", @"üìº", @"üîä", @"üì¢", @"üì£", @"üìª", @"üì°", @"‚ûø", @"üîç", @"üîì", @"üîí", @"üîë", @"‚úÇ", @"üî®", @"üí°", @"üì≤", @"üì©", @"üì´", @"üìÆ", @"üõÄ", @"üöΩ", @"üí∫", @"üí∞", @"üî±", @"üö¨", @"üí£", @"üî´", @"üíä", @"üíâ", @"üèà", @"üèÄ", @"‚öΩ", @"‚öæ", @"üéæ", @"‚õ≥", @"üé±", @"üèä", @"üèÑ", @"üéø", @"‚ô†", @"‚ô•", @"‚ô£", @"‚ô¶", @"üèÜ", @"üëæ", @"üéØ", @"üÄÑ", @"üé¨", @"üìù", @"üìñ", @"üé®", @"üé§", @"üéß", @"üé∫", @"üé∑", @"üé∏", @"„ÄΩ", @"üëü", @"üë°", @"üë†", @"üë¢", @"üëï", @"üëî", @"üëó", @"üëò", @"üëô", @"üéÄ", @"üé©", @"üëë", @"üëí", @"üåÇ", @"üíº", @"üëú", @"üíÑ", @"üíç", @"üíé", @"‚òï", @"üçµ", @"üç∫", @"üçª", @"üç∏", @"üç∂", @"üç¥", @"üçî", @"üçü", @"üçù", @"üçõ", @"üç±", @"üç£", @"üçô", @"üçò", @"üçö", @"üçú", @"üç≤", @"üçû", @"üç≥", @"üç¢", @"üç°", @"üç¶", @"üçß", @"üéÇ", @"üç∞", @"üçé", @"üçä", @"üçâ", @"üçì", @"üçÜ", @"üçÖ", @"‚òÄ", @"‚òî", @"‚òÅ", @"‚õÑ", @"üåô", @"‚ö°", @"üåÄ", @"üåä", @"üê±", @"üê∂", @"üê≠", @"üêπ", @"üê∞", @"üê∫", @"üê∏", @"üêØ", @"üê®", @"üêª", @"üê∑", @"üêÆ", @"üêó", @"üêµ", @"üêí", @"üê¥", @"üêé", @"üê´", @"üêë", @"üêò", @"üêç", @"üê¶", @"üê§", @"üêî", @"üêß", @"üêõ", @"üêô", @"üê†", @"üêü", @"üê≥", @"üê¨", @"üíê", @"üå∏", @"üå∑", @"üçÄ", @"üåπ", @"üåª", @"üå∫", @"üçÅ", @"üçÉ", @"üçÇ", @"üå¥", @"üåµ", @"üåæ", @"üêö", @"1‚É£", @"2‚É£", @"3‚É£", @"4‚É£", @"5‚É£", @"6‚É£", @"7‚É£", @"8‚É£", @"9‚É£", @"0‚É£", @"#‚É£", @"‚¨Ü", @"‚¨á", @"‚¨Ö", @"‚û°", @"‚Üó", @"‚Üñ", @"‚Üò", @"‚Üô", @"‚óÄ", @"‚ñ∂", @"‚è™", @"‚è©", @"üÜó", @"üÜï", @"üîù", @"üÜô", @"üÜí", @"üé¶", @"üàÅ", @"üì∂", @"üàµ", @"üà≥", @"üâê", @"üàπ", @"üàØ", @"üà∫", @"üà∂", @"üàö", @"üà∑", @"üà∏", @"üàÇ", @"üöª", @"üöπ", @"üö∫", @"üöº", @"üö≠", @"üÖø", @"‚ôø", @"üöá", @"üöæ", @"„äô", @"„äó", @"üîû", @"üÜî", @"‚ú≥", @"‚ú¥", @"üíü", @"üÜö", @"üì≥", @"üì¥", @"üíπ", @"üí±", @"‚ôà", @"‚ôâ", @"‚ôä", @"‚ôã", @"‚ôå", @"‚ôç", @"‚ôé", @"‚ôè", @"‚ôê", @"‚ôë", @"‚ôí", @"‚ôì", @"‚õé", @"üîØ", @"üÖ∞", @"üÖ±", @"üÜé", @"üÖæ", @"üî≤", @"üî¥", @"üî≥", @"üïõ", @"üïê", @"üïë", @"üïí", @"üïì", @"üïî", @"üïï", @"üïñ", @"üïó", @"üïò", @"üïô", @"üïö", @"‚≠ï", @"‚ùå", @"¬©", @"¬Æ", @"‚Ñ¢", @"üè†", @"üè´", @"üè¢", @"üè£", @"üè•", @"üè¶", @"üè™", @"üè©", @"üè®", @"üíí", @"‚õ™", @"üè¨", @"üåá", @"üåÜ", @"üèß", @"üèØ", @"üè∞", @"‚õ∫", @"üè≠", @"üóº", @"üóª", @"üåÑ", @"üåÖ", @"üåÉ", @"üóΩ", @"üåà", @"üé°", @"‚õ≤", @"üé¢", @"üö¢", @"üö§", @"‚õµ", @"‚úà", @"üöÄ", @"üö≤", @"üöô", @"üöó", @"üöï", @"üöå", @"üöì", @"üöí", @"üöë", @"üöö", @"üöÉ", @"üöâ", @"üöÑ", @"üöÖ", @"üé´", @"‚õΩ", @"üö•", @"‚ö†", @"üöß", @"üî∞", @"üé∞", @"üöè", @"üíà", @"‚ô®", @"üèÅ", @"üéå", @"üáØüáµ", @"üá∞üá∑", @"üá®üá≥", @"üá∫üá∏", @"üá´üá∑", @"üá™üá∏", @"üáÆüáπ", @"üá∑üá∫", @"üá¨üáß", @"üá©üá™"];
};

// ÂàùÂßãÂåñÊï∞Â≠ó‰ø°ÊÅØ
- (void)initCountData
{
    _cellRow = COLLECTION_CELL_ROW;
    _cellCol = [self getCollectionCol];
    _cellPerPageCount = _cellRow * _cellCol;
    
    // Âèñ‰∏¥ËøëÊúÄÂ§ßÊï¥Êï∞
    NSInteger pageCount = _emojiArray.count / (_cellPerPageCount - 1);
    if (_emojiArray.count % (_cellPerPageCount - 1) != 0)
    {
        pageCount++;
    }
    _pageCount = pageCount;
    
    UICollectionViewFlowLayout *flowLayout = [[UICollectionViewFlowLayout alloc] init];
    [flowLayout setItemSize:CGSizeMake(COLLECTION_CELL_WIDTH, COLLECTION_CELL_WIDTH)];
    [flowLayout setScrollDirection:UICollectionViewScrollDirectionVertical];
    flowLayout.minimumLineSpacing = (COLLECTIONVIEW_HEIGHT - COLLECTION_CELL_WIDTH * _cellRow) / (_cellRow + 1);
    flowLayout.minimumInteritemSpacing = (self.frame.size.width - COLLECTION_CELL_WIDTH * _cellCol) / (_cellCol + 2);
    flowLayout.sectionInset = UIEdgeInsetsMake(flowLayout.minimumLineSpacing, flowLayout.minimumInteritemSpacing, flowLayout.minimumLineSpacing, flowLayout.minimumInteritemSpacing);
    _flowLayout = flowLayout;
}

- (void)initScrollView
{
    _scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, self.frame.size.width, COLLECTIONVIEW_HEIGHT)];
    _scrollView.pagingEnabled = YES;
    _scrollView.contentSize = CGSizeMake(_scrollView.frame.size.width * _pageCount, _scrollView.frame.size.height);
    _scrollView.showsVerticalScrollIndicator = NO;
    _scrollView.showsHorizontalScrollIndicator = NO;
    _scrollView.scrollsToTop = NO;
    _scrollView.delegate = self;
    [self addSubview:_scrollView];
    
    _pageControl = [[UIPageControl alloc] initWithFrame:CGRectMake(0, COLLECTIONVIEW_HEIGHT, self.frame.size.width, PAGECONTROL_HEIGHT)];
    _pageControl.numberOfPages = _pageCount;
    _pageControl.currentPage = 0;
    
    _pageControl.backgroundColor = [UIColor clearColor];
    _pageControl.pageIndicatorTintColor = [UIColor lightGrayColor];
    _pageControl.currentPageIndicatorTintColor = [UIColor darkGrayColor];
    
    _pageControl.userInteractionEnabled = NO;

    [self addSubview:_pageControl];
}

- (void)initBottomBar
{
    UIView *bottomBar = [[UIView alloc] initWithFrame:CGRectMake(0, INPUTVIEW_HEIGHT - BOTTOM_BAR_HEIGHT, self.frame.size.width, BOTTOM_BAR_HEIGHT)];
    bottomBar.backgroundColor = [UIColor whiteColor];
    [self addSubview:bottomBar];
    CGRect frame = CGRectMake(self.frame.size.width - BOTTOM_SEND_BTN_WIDTH, 0, BOTTOM_SEND_BTN_WIDTH, BOTTOM_BAR_HEIGHT);
    
    UIButton *sendButton = [QuickCreateManager creatButtonWithFrame:frame Title:@"ÂèëÈÄÅ" TitleFont:[UIFont systemFontOfSize:BOTTOM_SEND_BTN_FONT] TitleColor:[UIColor whiteColor] BgImage:nil HighImage:nil BgColor:BOTTOM_SEND_BTN_BG_COLOR Tag:0];
    [sendButton addTarget:self action:@selector(sendMessage) forControlEvents:UIControlEventTouchUpInside];
    [bottomBar addSubview:sendButton];
}

- (void)inputString:(NSString *)string
{
    if ([self.delegateKeyInput respondsToSelector:@selector(insertText:)])
    {
        [self.delegateKeyInput insertText:string];
    }
}

- (void)keyboardBackspace
{
    if ([self.delegateKeyInput respondsToSelector:@selector(deleteBackward)])
    {
        [self.delegateKeyInput deleteBackward];
    }
}

- (void)sendMessage
{
    if ([self.delegateMsgSend respondsToSelector:@selector(MsgEmojiInputViewDelegate_SendMessage)])
    {
        [self.delegateMsgSend MsgEmojiInputViewDelegate_SendMessage];
    }
}

- (NSInteger)getCollectionCol
{
    if (fabs( ( double )[ [ UIScreen mainScreen ] bounds ].size.height - ( double )736 ) < DBL_EPSILON)
    {
        return COLLECTION_CELL_X_NUM_5_5;
    }
    else if (fabs( ( double )[ [ UIScreen mainScreen ] bounds ].size.height - ( double )667 ) < DBL_EPSILON)
    {
        return COLLECTION_CELL_X_NUM_4_7;
    }
    else
    {
        return COLLECTION_CELL_X_NUM_4;
    }
}

// Áªô ScrollView Â°´ÂÖÖÊï∞ÊçÆ
- (void)loadScrollViewWithPage:(NSUInteger)page
{
    // Â∑≤ÁªèÊòØ UÔºåÊâÄ‰ª•‰∏ç‰ºöÂá∫Áé∞Ë¥üÊï∞
    if (page >= _pageCount)
    {
        return;
    }
    
    // Â¶ÇÊûúÈúÄË¶ÅÁöÑËØùÊç¢ÊéâÂç†‰ΩçÁ¨¶
    // Âè™Êúâ Âá† ‰∏™ collectionView ÊâÄ‰ª•Âæ™ÁéØÈáçÂ§ç‰ΩøÁî®
    UICollectionView *collectionView = _arrCollectionViews[page % PREPARE_PAGE_NUMBER];
    if ((NSNull *)collectionView == [NSNull null])
    {
        CGRect frame = _scrollView.frame;
        frame.origin.x = _scrollView.frame.size.width * page;
        frame.origin.y = 0;
        collectionView = [[UICollectionView alloc] initWithFrame:frame collectionViewLayout:_flowLayout];
        
        collectionView.delegate = self;
        collectionView.dataSource = self;
        
        [_scrollView addSubview:collectionView];
        
        [collectionView registerClass:[MsgEmojiCollectionViewCell class] forCellWithReuseIdentifier:COLLECTION_CELL_INDENTIFER];
        [collectionView registerClass:[MsgEmojiBackspaceCollectionViewCell class] forCellWithReuseIdentifier:COLLECTION_CELL_BACKSPACE_INDENTIFER];
        collectionView.backgroundColor = [UIColor clearColor];
        
        [_arrCollectionViews replaceObjectAtIndex:page % PREPARE_PAGE_NUMBER withObject:collectionView];
    }
    else
    {
        CGRect frame = _scrollView.frame;
        frame.origin.x = _scrollView.frame.size.width * page;
        frame.origin.y = 0;
        collectionView.frame = frame;
        [collectionView reloadData];
    }

    // Ê†áËÆ∞ tag Áî®Êù•ÊòæÁ§∫ÁöÑÊó∂ÂÄôËøîÂõûÊï∞ÊçÆÁî®
    collectionView.tag = page;
    // Âä†ËΩΩÊñ∞ÁöÑÊï∞ÊçÆ
//    [collectionView reloadData];
}

#pragma mark - UIScrollView Delegate
- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView
{
    CGFloat pageWidth = _scrollView.frame.size.width;
    NSUInteger page = floor((_scrollView.contentOffset.x - pageWidth / 2) / pageWidth) + 1;
    _pageControl.currentPage = page;
    
    // Ë£ÖËΩΩ‰∏ä‰∏ÄÈ°µ„ÄÅÊú¨È°µ„ÄÅ‰∏ã‰∏ÄÈ°µÔºàÂ¶ÇÊûúÂ∑≤ÁªèË£ÖËΩΩÂ∞±Ëá™Âä®ÈÄÇÈÖçÔºâ
    for (NSInteger i = 0; i < PREPARE_PAGE_NUMBER; i++)
    {
        [self loadScrollViewWithPage:page + i - (PREPARE_PAGE_NUMBER + 1) / 2];
    }
}

#pragma mark - UICollectionView Delegate & Data Source

//-(NSInteger)numberOfSectionsInCollectionView:(UICollectionView *)collectionView
//{
//    // Âèñ‰∏¥ËøëÊúÄÂ§ßÊï¥Êï∞
//    NSInteger sectionCount = _emojiArray.count / _cellPerPageCount;
//    if (_emojiArray.count % _cellPerPageCount != 0)
//    {
//        sectionCount++;
//    }
//    return sectionCount;
//}

-(NSInteger)collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section
{
    return _cellPerPageCount;
}

-(UICollectionViewCell *)collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *cellIdentifier = COLLECTION_CELL_INDENTIFER;
    static NSString *cellBackSpaceIdentifier = COLLECTION_CELL_BACKSPACE_INDENTIFER;
    
    // ‰∏çÊòØÊúÄÂêé‰∏ÄÈ¢óÂà†Èô§ÈîÆ
    if (indexPath.row < _cellPerPageCount - 1) {
        MsgEmojiCollectionViewCell *cell = (MsgEmojiCollectionViewCell *)[collectionView dequeueReusableCellWithReuseIdentifier:cellIdentifier forIndexPath:indexPath];
        NSInteger index = collectionView.tag * (_cellPerPageCount - 1) + indexPath.row;
        // Â¶ÇÊûúÊ≤°ÊúâË∂ÖÂá∫ËåÉÂõ¥
        if (index < _emojiArray.count)
        {
            [cell.titleLabel setText:_emojiArray[index]];
        }
        else
        {
            [cell.titleLabel setText:@""];
        }
        return cell;
    }
    else
    {
        MsgEmojiBackspaceCollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:cellBackSpaceIdentifier forIndexPath:indexPath];
        return cell;
    }
}

- (void)collectionView:(UICollectionView *)collectionView didHighlightItemAtIndexPath:(NSIndexPath *)indexPath
{
//    UICollectionViewCell *collectionViewCell = [collectionView cellForItemAtIndexPath:indexPath];
//    collectionViewCell.backgroundColor = [UIColor lightGrayColor];
    // ‰∏çÊòØÊúÄÂêé‰∏ÄÈ¢óÂà†Èô§ÈîÆ
    if (indexPath.row < _cellPerPageCount - 1)
    {
        NSInteger index = collectionView.tag * (_cellPerPageCount - 1) + indexPath.row;
        // Â¶ÇÊûúÊ≤°ÊúâË∂ÖÂá∫ËåÉÂõ¥
        if (index < _emojiArray.count)
        {
            [self inputString:_emojiArray[index]];
        }
        else
        {
        }
    }
    else
    {
        [self keyboardBackspace];
    }
}

//- (void)collectionView:(UICollectionView *)collectionView didUnhighlightItemAtIndexPath:(NSIndexPath *)indexPath
//{
//    UICollectionViewCell *collectionViewCell = [collectionView cellForItemAtIndexPath:indexPath];
//    collectionViewCell.backgroundColor = [UIColor clearColor];
//}

- (BOOL)collectionView:(UICollectionView *)collectionView shouldHighlightItemAtIndexPath:(NSIndexPath *)indexPath
{
    return YES;
}

@end